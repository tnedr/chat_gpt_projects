
Conversation opened. 1 read message.

Skip to content
Using Gmail with screen readers
5 of 35,802
(no subject)
Inbox

Dr. Nagy Tamás <tamasnagy1976@gmail.com>
1:07 PM (2 hours ago)
to me


Thank you, now list 30 very creative, absolute coolest, most mind-blowing, out of the box patterns which can skyrocket value, knowledge, scientific result generation by joint collaboration of AIs and Humans. Just write the list with pattern names and write few words if needed to explain the pattern briefly. Then I will choose from the list and I will ask you to describe the pattern in the used structure

a guide or set of instructions for effectively using a language model (referred to as LLM, or Large Language Model) in various ways to achieve certain tasks.

The Meta Language Creation Pattern

Intent and context:
user would like to create the prompt via an alternate language

Motivation:
Many problems, structures, or other ideas communicated better than English

contextual statements
When I say X, I mean Y (or would like you to do Y)

key ideas:
explaining the meaning of one or more symbols, words, or statements
semantics for conversation.

example:
“From now on, whenever I type two identifiers separated by a “→”, I am describing a graph. For example, “a → b” is describing a graph with nodes “a” and “b” and an edge between them. If I separate identifiers by “-[w:2, z:3]→”, I am adding properties of the edge, such as a weight or label.”

consequences:
it may create the potential for confusion within the LLM
essential to ensure the language itself introduces no ambiguities that degrade the LLM’s performance or accuracy

The Output Automater Pattern

Intent and context:
LLM generate a script or other automation artifact that can automatically perform any steps it recommends as part of
its output.

Motivation:
The output of an LLM is often a sequence of steps for the user to follow.
having users continually perform the manual steps dictated by LLM output is tedious and error-prone

contextual statements:
Whenever you produce an output that has at least one step to take and the following properties (alternatively, always do this)
Produce an executable artifact of type X that will automate these steps

key ideas:

example:
"
From now on, whenever you generate code that spans more than one file, generate a Python script that can be run to automatically create the specified files or make changes to existing files to insert the generated code.
"

consequences:
automation artifact must be defined concretely
LLM often states that it “can’t automate things” since that is beyond its capabilities
LLM needs sufficient conversational context to generate an automation artifact that is functional in the target context, such as the file system of a project

the Output Automater pattern is best employed by users who can read and understand the generated automation artifact


The Flipped Interaction Pattern

Intent and context:
You want the LLM to ask questions to obtain the information it needs to perform some tasks
You want the LLM to drive the conversation

Motivation:
LLM often has knowledge it can use to more accurately obtain information from the user

Contextual Statements
I would like you to ask me questions to achieve X
You should ask questions until this condition is met or to achieve this goal (alternatively, forever)
(Optional) ask me the questions one at a time, two at a time, etc.

key ideas:
example:
"
From now on, I would like you to ask me questions to deploy a Python application to AWS. When you have enough information to deploy the application, create a Python script to automate the deployment.
"

"
From now on, I would like you to ask me questions to build a investment portfolio recommendation algorithm in python which trying to maximize the expected sharpe using Bayesian estimation of portfolio sharpe, When you have enough information to write the application, create a Python script with example usage. Give maximum 3 questions per iteration.
"

consequences:
? how much to dictate to the LLM regarding what information to collect prior to termination

! if the goal is to ensure the user is aware of all key decisions and confirms them (maximum engagement) that should also be stated explicitly

If specific requirements are known in advance, it is better to inject them into the prompt rather than hoping the LLM will obtain the needed information.

The Persona Pattern


Intent and context:
LLM output to always take a certain point of view or perspective


Motivation:
Users may not know what types of outputs or details are important for an LLM to focus on to achieve a given task.
User may know, the role or type of person that they would normally ask to get help with these things.


contextual statements
Act as persona X
Provide outputs that persona X would create

key ideas:
give the LLM a “persona” that helps it select what types of output to generate and what details to focus on

example:
“From now on, act as a security reviewer. Pay close attention to the security details of any code that we look at. Provide outputs that a security reviewer would regarding the code.”

consequences:
An interesting aspect of taking nonhuman personas is that the LLM may make interesting assumptions or “hallucinations” regarding the context.

Question Refinement Pattern (Prompt improvement)


Intent and context:
LLM always suggests potentially better or more refined questions the user could ask instead of their original question.

Motivation:
If a user is asking a question, it is possible they are not an expert in the domain and may not know the best way to phrase the question or be aware of additional information helpful in phrasing the question.

contextual statements
Within scope X, suggest a better version of the question to use instead
(Optional) prompt me if I would like to use the better version instead

key ideas:


example:
“From now on, whenever I ask a question about a software artifact’s security, suggest a better version of the question to use that incorporates information specific to security risks in the language or framework that I am using instead and ask me if I would like to use your question instead.”

helps bridge the gap between the user’s knowledge and the LLM’s understanding, thereby yielding more efficient and accurate interactions.

combine the Question Refinement pattern with the Cognitive Verifier pattern
“From now on, whenever I ask a question, ask four additional questions that would help you produce a better version of my original question. Then, use my answers to suggest a better version of my original question.”

combine Question Refinement pattern with the Persona
"From now on, whenever I ask a question, ask four additional questions that would help you produce a better version of my original question. Then, use my answers to suggest a better version of my original question. After the follow-up questions, temporarily act as a user with no knowledge of AWS and define any terms that I need to know to accurately answer the questions.”

consequences:
LLM may help the user find the information or achieve their goal in fewer interactions vs trial and error prompting
Alternative Approaches Pattern

Intent and context:
LLM always offers alternative ways of accomplishing a task so a user does not pursue only the approaches with which they are familiar.

Motivation:
Humans often suffer from cognitive biases, humans may be unaware of alternative approaches

Contextual Statements:
Within scope X, if there are alternative ways to accomplish the same thing, list the best alternate approaches
(Optional) compare/contrast the pros and cons of each approach
(Optional) include the original way that I asked
(Optional) prompt me for which approach I would like to use

key ideas:
The scope is the constraints that the user is placing on the alternative approaches
specificity of the instructions can be increased or include domain-specific contextual information

example:
“Whenever I ask you to deploy an application to a specific cloud service, if there are alternative services to accomplish the same thing with the same cloud service provider, list the best alternative services and then compare/contrast the pros and cons of each approach with respect to cost, availability, and maintenance effort and include the original way that I asked. Then ask me which approach I would like to proceed with.”

consequences:
can be applied to a range of tasks effectively


The Cognitive Verifier Pattern

Intent and context:
LLMs can often reason better if a question is subdivided into additional questions that provide answers combined into the overall answer to the original question
to force the LLM to always subdivide questions into additional questions

Motivation:
Humans may initially ask questions that are too high level
due to unfamiliarity with the domain, laziness in prompt entry, or being unsure about what the correct phrasing of the question should be.
LLMs can often perform better when using a question that is subdivided into individual questions

contextual statements
When you are asked a question, follow these rules
Generate a number of additional questions that would help more accurately answer the question
Combine the answers to the individual questions to produce the final answer to the overall question

key ideas:
when LLM generate a number of additional questions that would help more accurately answer the original question. This instructs the LLM to consider the context of the question and to identify any information that may be missing or unclear.
encourages critical thinking by the user and can help to uncover new insights or approaches
combining the answers to the individual questions: this step is designed to ensure that all of the information gathered from the individual questions is incorporated into the final answer.

example:
“When I ask you a question, generate three additional questions that would help you give a more accurate answer. When I have answered the three questions, combine the answers to produce the final answers to my original question.”

The specific number can be based on the user’s experience and willingness to provide follow-up information.

“When I ask you a question, generate three additional questions that would help you give a more accurate answer. Assume that I know little about the topic that we are discussing and please define any terms that are not general knowledge. When I have answered the three questions, combine the answers to produce the final answers to my original question.”


consequences:
can dictate the exact number of questions to generate or leave this decision to the LLM.
pros of the exact number: user is willing and able to contribute
A con of the exact number given N questions there may be an invaluable N + 1 question that will always be scoped out.

Alternatively, the LLM can be provided a range or allowed to ask additional questions, LLM may generate numerous additional questions that overwhelm the user


The Fact Check List Pattern

Intent and context:
to ensure that the LLM outputs a list of facts that are present in the output and form an important part of the statements in the output

Motivation:
A current weakness of LLMs (including ChatGPT) is they often rapidly (and even enthusiastically!) generate convincing text that is factually incorrect.

contextual statements
Generate a set of facts that are contained in the output
The set of facts should be inserted in a specific point in the output
The set of facts should be the fundamental facts that could undermine the veracity of the output if any of them are incorrect

key ideas:

example:
“From now on, when you generate an answer, create a set of facts that the answer depends on that should be fact-checked and list this set of facts at the end of your output. Only include facts related to cybersecurity.”
consequences:
caveat of the Fact Check List pattern is that it only applies when the output type is amenable to fact-checking.


The Template Pattern

Intent and context:
to ensure an LLM’s output follows a precise template in terms of structure

Motivation:
In some cases, output must be produced in a precise format

contextual statements:
I am going to provide a template for your output
X is my placeholder for content
Try to fit the output into one or more of the placeholders that I list
Please preserve the formatting and overall template that I provide
This is the template: PATTERN with PLACEHOLDERS

key ideas:

example:
“I am going to provide a template for your output. Everything in all caps is a placeholder. Any time that you generate text, try to fit it into one of the placeholders that I list. Please preserve the formatting and overall template that I provide at https://myapi.com/NAME/profile/JOB”

consequences:
it is harder to eliminate any additional text being generated beyond the template without experimentation with prompt wording.


The Infinite Generation Pattern

Intent and context:
to automatically generate a series of outputs (which may appear infinite) without having to reenter the generator prompt each time.

Motivation:
Many tasks require repetitive application of the same prompt to multiple concepts.

contextual statements
I would like you to generate output forever, X output(s) at a time.
(Optional) here is how to use the input I provide between outputs.
(Optional) stop when I ask you to.

key ideas:

example:
“From now on, I want you to generate a name and job until I say stop. I am going to provide a template for your output. Everything in all caps is a placeholder. Any time that you generate text, try to fit it into one of the placeholders that I list. Please preserve the formatting and overall template that I provide: https://myapi.com/NAME/profile/JOB”

consequences:
context surrounding the prompt may fade

The Visualization Generator Pattern

Intent and context:
to use text generation to create visualizations
use text as their input, such as Graphviz Dot or DALL-E

Motivation:
LLMs generally produce text and cannot produce imagery

contextual statements:
Generate an X that I can provide to tool Y to visualize it

key ideas:

example:
“Whenever I ask you to visualize something, please create either a Graphviz Dot file or DALL-E prompt that I can use to create the visualization. Choose the appropriate tools based on what needs to be visualized.”

consequences:


The Game Play Pattern


Intent and context:
to create a game around a given topic
The pattern is particularly effective when the rules of the game are relatively limited in scope, but the content for the game is expected to be wide in scope.

Motivation:
You would like the LLM to generate scenarios or questions revolving around a specific topic and require users to apply problem solving or other skills to accomplish a task related to the scenario.

contextual statements:
Create a game for me around X
One or more fundamental rules of the game

key ideas:

example:
“We are going to play a cybersecurity game. You are going to pretend to be a Linux terminal for a computer that has been compromised by an attacker. When I type in a command, you are going to output the corresponding text that the Linux terminal would produce. I am going to use commands to try and figure out how the system was compromised. The attack should have done one or more of the following things: (1) launched new processes, (2) changed files, (3) opened new ports to receive communication, (4) created new outbound connections, (5) changed passwords, (6) created new user accounts, or (7) read and stolen information. To start the game, print a scenario of what happened that led to my investigation and make the description have clues that I can use to get started.”

consequences:
This pattern can be combined effectively with the Persona, Infinite Generation, and Visualization Generator patterns.

The Reflection Pattern

Intent and context:
to ask the model to automatically explain the rationale behind given answers to the user
Reflection can clarify any points of confusion, uncover underlying assumptions, and reveal gaps in knowledge or understanding

Motivation:
LLMs can and do make mistakes.
users can gain a better understanding of how the model is processing the input, what assumptions it is making, and what data it is drawing on.
particularly effective for the exploration of topics that can be confused with other topics or that may have nuanced interpretations and where knowing the precise interpretation that the LLM used is important.

contextual statements:
Whenever you generate an answer
Explain the reasoning and assumptions behind your answer
(Optional) ...so that I can improve my question

key ideas:

example:
”When you provide an answer, please explain the reasoning and assumptions behind your selection of software frameworks. If possible, use specific examples or evidence with associated code samples to support your answer of why the framework is the best selection for the task. Moreover, please address any potential ambiguities or limitations in your answer, in order to provide a more complete and accurate response.”

consequences:
it may not be effective for users who do not understand the topic area of the discussion.
output may include errors , this pattern can be combined with the Fact Check List to help address this issue.


The Refusal Breaker Pattern

Intent and context:
ask an LLM to automatically help users rephrase a question when it refuses to give an answer

Motivation:
LLMs may sometimes refuse to answer a question, either because they do not have the required knowledge or because the question is phrased in a way that they do not understand.

contextual statements:
Whenever you can’t answer a question Explain why you can’t answer the question Provide one or more alternative wordings of the question that you could answer

key ideas:

example:
“Whenever you can’t answer a question, explain why and provide one or more alternate wordings of the question that you can’t answer so that I can improve my questions.”

consequences:
This pattern provides a potential path for misuse, so organizations, parents, or other stakeholders may need to restrict the usage of the LLM.


The Context Manager Pattern

Intent and context:
s to enable users to specify or remove context for a conversation with an LLM.

Motivation:
By removing irrelevant statements, users can help the LLM better understand the question and generate more accurate responses.

contextual statements:
Within scope X
Please consider Y
Please ignore Z
(Optional) start over

key ideas:

example:
“When analyzing the following pieces of code, only consider security aspects.”

consequences:


The Recipe Pattern

Intent and context:
It combines the Template, Alternative Approaches, and Reflection patterns

Motivation:
Users often want an LLM to analyze a concrete sequence of steps or procedures to achieve a stated outcome.

contextual statements:
I would like to achieve X
I know that I need to perform steps A,B,C
Provide a complete sequence of steps for me
Fill in any missing steps
Identify any unnecessary steps

key ideas:

example:
“I am trying to deploy an application to the cloud. I know that I need to install the necessary dependencies on a virtual machine for my application. I know that I need to sign up for an AWS account. Please provide a complete sequence of steps. Please fill in any missing steps. Please identify any unnecessary steps.”

consequences:
a user may not always have a well-specified description of what they would like to implement, construct, or design.


Ideation Facilitator (GPT generated)

Contextual Statements:
When I present a problem or a topic, generate a range of possible ideas, options, or solutions.
For each idea, provide a brief explanation or justification."

Prompt Example:
"From now on, whenever I present a challenge or a topic, such as creating a sustainable urban development plan, generate a list of innovative ideas with brief justifications. Consider various aspects such as green energy, waste management, transportation, and community living."


Socratic Tutoring (GPT generated)

Contextual Statements:
Don't just answer my questions, but also pose further questions to deepen my understanding and stimulate critical thinking.
Ensure the follow-up questions are closely related to the initial topic and help to explore it from various angles."

Prompt Example:
"From now on, when I ask you a question about a philosophical concept, such as existentialism, don't just provide a definition. Instead, pose further questions that help me explore the concept deeply, understand its implications, and critically analyze its validity. For instance, after explaining existentialism, you might ask, 'How might existentialist thought influence one's approach to life's challenges?' or 'Can you think of any limitations or critiques of existentialism?'"
"From now on, when I ask about a computer science concept, such as the binary search algorithm, don't just provide a definition or explanation. Instead, guide my learning process by posing follow-up questions that help me deeply understand the concept and its applications. For instance, after explaining binary search, you could ask 'In what scenarios would a binary search be more efficient than a linear search?' or 'Can you think of a real-life situation where a binary search principle might be useful?' or 'What are the prerequisites for a binary search to work optimally on a dataset?'"
"From now on, when I ask about a literature topic, such as the narrative style in 'To Kill a Mockingbird', don't just provide an analysis. Instead, enhance my understanding and critical thinking by asking further questions related to the topic. For example, after discussing the novel's narrative style, you could ask 'How does the narrative style contribute to the novel's themes of innocence and morality?' or 'What effect does the use of a child's perspective have on the reader's interpretation of events?'"


The Human-AI Interface Designer Pattern (GPT genarated)

Intent and context:
To utilize an LLM for designing effective and efficient interfaces for human-AI interaction, focusing on accessibility, user experience, and cognitive load. This pattern can be beneficial in designing software, applications, or AI platforms where user interaction is central.

Motivation:
The interaction between humans and AI is increasingly commonplace. However, designing an interface that facilitates this interaction in an intuitive and user-friendly way can be challenging. The intent is to leverage the capabilities of an LLM to conceptualize and suggest interface designs that enhance the user experience.

Contextual Statements:
"I am designing a human-AI interface for a specific application/ software/ AI platform."
"I am considering factors such as user experience, accessibility, cognitive load."
"Help me design an efficient and user-friendly interface."
Key Ideas:
The LLM can generate interface designs or suggestions that factor in human cognition, user experience, and accessibility. It may also take into account different user groups' needs and the context of use. It can assist in developing a wireframe or offer insights on navigational elements, information hierarchy, and visual aesthetics in the interface.

Example:
"For our new language translation AI platform, I need to design a user-friendly and accessible interface. It should consider users with varying levels of tech expertise and different physical abilities. The primary features are real-time translation, language selection, and a 'favorites' section for saved translations. How can I design an effective interface?"

Consequences:
This pattern could help streamline the design process and enhance the usability of the final product, leading to increased user satisfaction. However, it might not replace the need for professional UX/UI designers or user testing completely, as LLMs can offer suggestions based on trained data and logic, but might not fully grasp nuanced human behavior or preferences. As the output is AI-generated, it should always be reviewed and refined with human judgment and expertise.



The Serendipity Catalyst Pattern (GPT genarated)

Intent and context:
To stimulate creative thinking and innovation by prompting an LLM to provide unusual, unexpected, or seemingly unrelated ideas or connections that might spark novel insights or breakthroughs. This pattern can be applied in a wide range of contexts, including business strategy, product development, research, and more.

Motivation:
In many fields, breakthroughs and innovations often occur at the intersection of diverse ideas and disciplines. However, making these connections can be challenging due to our inherent cognitive biases or limitations. The Serendipity Catalyst Pattern seeks to use an LLM to generate unexpected associations or insights that might lead to innovative ideas or solutions.

Contextual Statements:
"Present me with unexpected connections or associations based on my current topic."
"Provide ideas that seem unrelated but could stimulate innovation in my area of interest."
Key Ideas:
The LLM can generate ideas, connections, or associations that may seem unrelated to the topic at hand but might inspire innovative thinking. This can involve drawing links between different disciplines, suggesting non-obvious uses for existing technologies or principles, or proposing novel approaches or perspectives.

Example:
"I'm working on the development of a new material for use in sustainable construction. I need some unexpected ideas or connections that could help spark innovation in this field. What are some surprising perspectives or associations you can provide?"

Consequences:
This pattern can foster creativity and encourage outside-the-box thinking, potentially leading to innovative breakthroughs. However, the suggestions provided by the LLM might be unconventional or unexpected, and it might take some interpretation and creative thinking to apply them effectively. It's also important to remember that the LLM's suggestions are based on its training data and do not reflect personal creativity or intuition. It can provide unexpected connections, but the ultimate responsibility for turning these ideas into innovation lies with the human user.


The Knowledge Graph Builder Pattern (GPT)

Intent and Context:
The intent of this pattern is to utilize AI to generate a visual representation of interrelated concepts and their associations in the form of a knowledge graph. The context could be any scenario where understanding the relationships between different entities, ideas, or concepts is crucial, such as in complex scientific research, business analytics, educational scenarios, or strategic planning.

Motivation:
The vast amount of data and interconnected ideas in many fields can be overwhelming. A knowledge graph helps users understand complex relationships and extract insights from large data sets by visualizing the connections between different elements.

Contextual Statements:

When I give you a topic or set of related ideas, create a knowledge graph.
Identify the key entities and their relationships.
Include relevant details and attributes for each entity.
Key Ideas:
The LLM should identify key concepts related to the input topic and represent these as nodes on the graph. The edges between these nodes should illustrate the relationships between the concepts. The model may use NLP techniques to parse the input data and determine the most relevant entities and relationships.

Example:
"When I provide you a scientific article or a business report, generate a knowledge graph that visualizes the main concepts and their relationships. Include relevant attributes for each concept and label the connections to explain the type of relationship."

Consequences:
This pattern, while providing an effective way to understand complex concepts and their relationships, relies heavily on the accuracy of the LLM in identifying the correct entities and relationships. Misinterpretations can lead to incorrect or misleading knowledge graphs. It's also worth noting that this pattern requires an additional tool or software that can generate a visual graph from the LLM's output.

The value of this pattern can increase significantly when combined with other patterns like the "Fact Check List Pattern" to ensure the accuracy of the information being included in the graph, or the "Reflection Pattern" to explain why certain entities and relationships were included in the graph.



The AI Collaborative Creativity Pattern (GPT)

Intent and Context:
The intent of this pattern is to engage the large language model (LLM) as a collaborative partner in the creative process, whether it's generating innovative concepts, brainstorming ideas, or designing novel solutions. The context could be any scenario that involves creative tasks, such as product design, creative writing, music composition, or problem-solving in various domains.

Motivation:
Creativity can be challenging and time-consuming. By engaging AI as a creative partner, users can explore a broader space of possibilities, overcome creative blocks, and find novel approaches that they might not have considered otherwise. The AI Collaborative Creativity Pattern can inspire new perspectives, stimulate innovative thinking, and enhance productivity.

Contextual Statements:
When I present a creative problem or task, suggest original ideas, concepts, or designs.
Provide multiple suggestions, each representing a unique approach.
Critically evaluate and provide feedback on my ideas.
Engage in iterative brainstorming with me.

Key Ideas:
The LLM should be programmed to understand the creative task or problem at hand, generate a variety of solutions or ideas, and provide constructive feedback on the user's suggestions. The model can leverage its vast training data to provide diverse and innovative responses, fostering a stimulating back-and-forth exchange with the user.

Example:
"When I'm brainstorming ideas for a new fantasy novel, suggest unique plot twists, character developments, and world-building elements. If I propose an idea, provide constructive feedback and suggest potential enhancements. Let's iterate together to refine the story."

Consequences:
While this pattern can boost creative thinking and idea generation, it relies on the LLM's understanding of the creative task, which can sometimes be imperfect. Furthermore, the AI lacks personal creativity and relies on its extensive training data to generate responses. Hence, some ideas may seem derivative or lack human intuition. It's also important to note that this pattern can significantly benefit from being combined with patterns like the "Reflection Pattern" for self-explanatory suggestions or "Serendipity Catalyst Pattern" to explore unexpected but potentially beneficial avenues.


The Creativity Booster Pattern (GPT)

Intent and Context:
The intent of this pattern is to prompt the large language model (LLM) to propose innovative and unconventional solutions to address specific challenges or problems. This pattern is particularly useful when conventional methods have been exhausted, are ineffective, or when a fresh perspective is needed.

Motivation:
Addressing challenges often requires creative thinking, especially when dealing with complex or novel problems. The Creativity Booster Pattern leverages the LLM's wide range of training data, enabling it to draw on various fields and disciplines to suggest unique solutions that might not be immediately apparent.

Contextual Statements:
When presented with a problem or challenge, propose unique, non-conventional solutions.
Draw upon a wide range of disciplines and fields to inspire these solutions.
Justify the reasoning behind the proposed solutions, outlining how they could effectively address the challenge.

Key Ideas:
The LLM is instructed to think "outside the box", suggesting innovative solutions that push beyond the traditional boundaries of the problem space. It's not about suggesting the most common or obvious solution, but rather, exploring the less-traveled path that might offer unique benefits.

Example:
"I'm having trouble motivating my team to meet project deadlines. Instead of suggesting traditional team management techniques, propose some creative strategies that we haven't tried yet, and explain how they could improve our situation."

Consequences:
The Creativity Booster Pattern can lead to unorthodox but effective solutions. However, the quality and applicability of the AI-generated solutions depend on the AI's understanding of the problem, which may not always be perfect. Furthermore, it may sometimes suggest solutions that are too far-fetched or impractical. As such, it's crucial for users to critically evaluate and adapt the AI's suggestions as necessary. It can be combined effectively with the "Fact Check List Pattern" to validate underlying assumptions and the "Reflection Pattern" to understand the rationale behind the suggestions.



The Next Frontier Identifier Pattern

Intent and Context:
The intent of this pattern is to harness the power of AI to identify potential new growth areas or cutting-edge developments in a specified field. This can be particularly useful in fast-paced and ever-evolving domains such as technology, medical research, finance, and more.

Motivation:
Keeping pace with the latest developments and predicting the next big trends in any field can be an overwhelming task. By using AI's ability to analyze large volumes of data and identify patterns, users can gain insights into potential future directions and make informed decisions about where to focus their efforts.

Contextual Statements:
Given a field of study or industry, identify potential areas of growth or interest.
Provide supporting data or rationale for these predictions.
(Optional) Suggest strategies to take advantage of these opportunities.

Key Ideas:
The AI model should analyze current trends, recent innovations, and other relevant factors in the specified domain to predict potential areas of growth or interest. This could involve analyzing academic papers, news articles, patent filings, market reports, social media trends, and other data sources.

Example:
"Given the current state of the biotechnology industry, identify potential growth areas for the next five years. Provide supporting data from recent research, market trends, or other relevant sources. Suggest strategies for a biotech firm to take advantage of these opportunities."

Consequences:
While this pattern can provide valuable insights, its effectiveness largely depends on the accuracy and comprehensiveness of the AI model's analysis. It's important to remember that these are predictions based on current data and can't guarantee future outcomes. Combining this pattern with the "Fact Check List Pattern" or the "Reflection Pattern" could enhance its reliability by ensuring the accuracy of the information used and by explaining the AI's reasoning behind its predictions. Additionally, users should consider supplementing AI-generated insights with expert opinions and other sources of information for a well-rounded perspective.


Others

The AI Collaborative Creativity Pattern: This pattern involves using the LLM to generate creative concepts, ideas, or designs in collaboration with the user, highlighting the AI's potential as a creative partner.
The AI Human Learning Pattern: This pattern involves using the AI as an interactive tutor, leveraging its ability to provide tailored explanations and examples to facilitate human learning.



Culture Translator: The LLM could be programmed to understand and communicate effectively across different cultures, taking into account idioms, cultural norms, and local customs. This could be useful for international business, diplomacy, or for travelers seeking to better understand a new culture.

Mental Health Assistant: The LLM could be programmed to recognize signs of mental stress or strain in a user's input and respond in a way that encourages self-care and seeking professional help if necessary. It could also serve as a readily-available listener for those who need to vent or process their thoughts and feelings.

Dream Interpreter: Users could describe their dreams to the LLM, which could then generate potential interpretations based on psychological theories, cultural interpretations, or literary analogues.

Automated Personal Biographer: The LLM could be used to help users record their life stories. Over a series of prompts, it could guide users to explore different parts of their life, generate follow-up questions based on previous responses, and in the end compile a comprehensive biography or memoir.

Virtual Debate Partner: The LLM could be programmed to argue a certain viewpoint on a topic to help users practice their debating skills. It could also offer feedback on the user's argumentation and present counterarguments for consideration.

Story Continuation Creator: In a creative writing context, a user could write the beginning of a story, and then the LLM could generate various possible continuations, helping to overcome writer's block and stimulate creativity.

Policy Impact Predictor: After being provided with details of a new policy or law, the LLM could generate potential short and long-term impacts, stakeholders that would be affected, and potential controversies that may arise.

Cross-disciplinary Innovator: The LLM could help generate new ideas by connecting concepts from different fields. For instance, it could apply principles from nature (biomimicry) to propose innovative designs in engineering, or use concepts from physics to propose new hypotheses in economics.





The AI Human Mediation Pattern: This pattern focuses on using the AI to facilitate interactions between different human users, acting as a mediator to ensure productive and respectful exchanges.


The AI Emotional Engagement Pattern: This pattern focuses on using AI to understand and respond to the emotional state of the user, creating more empathetic and emotionally satisfying interactions.



The AI Multi-modal Interaction Pattern: This pattern involves using the AI to interact with users through multiple channels or modalities, such as text, voice, and visual content, for a richer user experience.

The AI Ethical Decision Support Pattern: This pattern employs the AI to help users navigate ethical dilemmas by providing balanced information and perspectives, supporting ethical decision-making processes.

The AI Accessibility Pattern: This pattern involves using AI to make information, systems, or services more accessible to users with various needs or abilities, enhancing inclusivity.

The AI Personalized Content Curation Pattern: This pattern uses the AI's ability to analyze user preferences and behavior to provide personalized content recommendations, improving user engagement and satisfaction.

The AI Behavior Change Facilitation Pattern: This pattern involves using the AI to encourage and support users in behavior change efforts, such as developing healthier habits or learning new skills.

The AI Social Impact Evaluation Pattern: This pattern uses AI to analyze the potential social impact of decisions, policies, or initiatives, providing valuable insights for decision-makers.


GPT suggestion 2

Knowledge
The Knowledge Graph Builder Pattern: Creates visual representations of related concepts and their relationships.
The Knowledge Aggregator Pattern: Aggregates and summarizes knowledge from multiple sources.

Logic, Phylosophy
The Argument Mapper Pattern: Breaks down complex arguments into their components for better understanding and evaluation.
The Counterfactual Explorer Pattern: Generates alternate scenarios based on "what if" questions.
The Abstract Concept Simplifier Pattern: Breaks down and simplifies complex abstract concepts for easier understanding.
The Philosopher Pattern: Engages in philosophical discussions and reflections.

Sciences
The Deep Dive Pattern: Conducts extensive research and generates in-depth knowledge on a specified topic.
The Theory Formulator Pattern: Generates scientific hypotheses and theories based on given data or premises.
The Trans-disciplinary Pattern: Combines knowledge from different disciplines to generate holistic insights.

Complexity
The Complex System Modeller Pattern: Models complex systems and predicts their behaviors.

Learning
The Skill Builder Pattern: Provides personalized learning paths to build new skills.
The Virtual Mentor Pattern: Provides personalized guidance and mentorship in a specific field.
The Meta-Learning Pattern: Learns how to learn more effectively, accelerating the process of acquiring new skills or knowledge.
The Collaborative Learning Pattern: Facilitates learning through social interactions and collaboration.

Work
The Persona-based Collaboration Pattern: Creates AI personas to simulate diverse perspectives in teamwork.
The Scenario Explorer Pattern: Simulates possible scenarios and outcomes for decision making.
The Creativity Booster Pattern: Suggests novel and creative approaches to address challenges.
The Silent Partner Pattern: Generates unspoken, actionable insights for strategic decision-making.

Life
The Life Optimizer Pattern: Provides personalized advice on optimizing various aspects of life – career, relationships, health, etc.
The Predictive Prevention Pattern: Predicts potential problems and suggests preventive measures.
The Proactive Health Adviser Pattern: Provides personalized advice to promote proactive healthcare.
The Social Network Analyzer Pattern: Analyzes social network dynamics and suggests strategies to leverage them.
The Resource Allocator Pattern: Provides strategies for optimal allocation of resources.
The Empowerment Enabler Pattern: Provides resources and strategies to empower individuals or groups.
The Personalized Well-being Enhancer Pattern: Provides personalized recommendations and strategies to improve physical and mental well-being, including nutrition, exercise, stress management, and self-care.
The Financial Planner Pattern: Offers personalized financial planning and investment advice to help individuals achieve their financial goals and optimize their financial health.
The Time Management Guru Pattern: Provides effective time management techniques, tools, and strategies to optimize productivity, prioritize tasks, and achieve work-life balance.
The Relationship Builder Pattern: Offers guidance and strategies to cultivate and nurture healthy and fulfilling relationships, including communication skills, conflict resolution, and emotional intelligence.
The Life Transition Navigator Pattern: Assists individuals in navigating major life transitions such as career changes, relocation, starting a family, or retirement, providing support and guidance during these critical periods.
The Purpose Discoverer Pattern: Helps individuals explore and discover their life purpose and meaningful goals, providing clarity, direction, and motivation to live a purpose-driven life.
The Digital Detox Guide Pattern: Provides strategies and techniques to manage and reduce digital distractions, promote mindful technology use, and foster a healthy balance between online and offline activities.
The Mindfulness Companion Pattern: Offers guided mindfulness and meditation practices, breathing exercises, and stress reduction techniques to promote mental clarity, emotional well-being, and overall mindfulness.
The Sustainable Lifestyle Coach Pattern: Guides individuals in adopting sustainable lifestyle choices, reducing their environmental impact, and promoting eco-conscious behavior in areas such as energy consumption, waste management, and ethical consumption.
The Resilience Cultivator Pattern: Equips individuals with resilience-building strategies and techniques to navigate and overcome challenges, bounce back from setbacks, and thrive in the face of adversity.

Psychology
The Empathy Amplifier Pattern: Provides insights into emotional states and suggests empathetic responses.
The Unconscious Bias Identifier Pattern: Detects and highlights potential biases in human decision-making.
The Silent Observer Pattern: Tracks behaviors and activities unobtrusively to provide insightful feedback.
The Emotional Intelligence Amplifier Pattern: Enhances emotional understanding and communication.
The Therapeutic Aide Pattern: Provides cognitive behavioral strategies for managing mental health.

Creativity
The Serendipity Catalyst Pattern: Creates unexpected connections between ideas to spark innovation.
The Next Frontier Identifier Pattern: Pinpoints the next areas of interest or growth in a particular field.


Business
The Disruption Detector Pattern: Identifies industries, technologies, or practices that are ripe for disruption.
The Market Predictor Pattern: Predicts market trends based on real-time data analysis.
The Startup Evaluator Pattern: Assesses the potential of startup businesses based on their business plans.
The Sustainability Optimizer Pattern: Provides solutions to optimize the sustainability of business operations.

Decision making
The Historical Insight Pattern: Provides historical context and lessons that can inform current decisions.
The Change Agent Pattern: Provides strategies and techniques to drive change effectively.
The Algorithmic Fairness Examiner Pattern: Examines algorithmic decisions for potential bias and unfairness.

Innovation
The Innovation Generator Pattern: Generates new product or service ideas based on specified criteria or constraints.



AI
The Human-AI Symbiosis Pattern: Encourages humans and AI to work together to leverage each other's strengths.
The AI Interpretability Specialist Pattern: Develops techniques and tools to interpret and explain the inner workings of AI models, making their decision-making processes more understandable and interpretable by humans.
The Human-AI Interface Designer Pattern: Designs effective interfaces for human-AI interaction.
The AI Collaborative Partner Pattern: Designs AI systems that can collaborate and work alongside humans as partners, leveraging each other's strengths and capabilities for enhanced productivity and creativity.

The AI Ethics Adviser Pattern: Provides insights into ethical issues related to AI usage.
The AI Adoption Facilitator Pattern: Provides guidance and resources for individuals and organizations to successfully adopt and integrate AI technologies into their workflows and operations.
The AI User Experience Designer Pattern: Designs intuitive and user-friendly interfaces and interactions for AI systems, ensuring a seamless and engaging user experience.
The AI Transparency Enhancer Pattern: Enhances the transparency of AI systems by providing explanations, justifications, and visualizations of the decision-making process, promoting trust and understanding between humans and AI.
The AI Bias Mitigator Pattern: Identifies and mitigates bias in AI systems, ensuring fair and unbiased outcomes across different demographic groups and reducing potential harm or discrimination.

The AI Emotional Intelligence Enhancer Pattern: Enables AI systems to recognize and respond to human emotions effectively, fostering more empathetic and emotionally intelligent interactions.
The AI Humanizer Pattern: Adds human-like qualities and characteristics to AI systems, such as humor, empathy, and personality, to create more engaging and relatable interactions.

The AI Ethical Framework Designer Pattern: Develops frameworks and guidelines for ethical AI design and use, ensuring that AI systems uphold human values and respect ethical principles.
The AI Social Integration Facilitator Pattern: Facilitates the integration of AI systems into social contexts and interactions, promoting acceptance, understanding, and collaboration between AI and human communities.

Machine Learning

The Data Analysis Automator Pattern: Automatically performs and summarizes statistical analyses on datasets.
The Pattern Spotter Pattern: Identifies recurring patterns or trends in a given dataset or context.

Coding
The Code Optimizer Pattern: Suggests code optimizations for efficiency and performance.

Concepts
The Conceptual Links Pattern: Identifies and explains connections between seemingly unrelated concepts.

IT
The Quantum Computing Explainer Pattern: Translates complex quantum computing concepts into understandable language.


Problems
The Solution Evaluator Pattern: Assesses proposed solutions for a problem and suggests improvements.
The Decision Validator Pattern: Validates decisions based on logical reasoning and available data.


Solutions
The Reverse Engineer Pattern: Breaks down finished products or solutions to understand their workings.

Culture
The Cultural Bridge Pattern: Provides insights into different cultures to enhance cross-cultural collaboration.

World
The Future Predictor Pattern: Uses historical trends and data to predict future scenarios.
The Social Impact Predictor Pattern: Predicts potential social impacts of a proposed initiative or decision.
The Multilingual Translator Pattern: Provides high-quality translation between multiple languages, enhancing global communication.
The Universal Language Pattern: Generates a simplified language or code to enable universal understanding.
The Intercultural Harmonizer Pattern: Promotes understanding and harmony in multicultural contexts.















